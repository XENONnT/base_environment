name: 'Test and update contexts'
on:
  workflow_dispatch:
  release:
    types: [created]
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: create key
        run: |
           mkdir ~/.ssh
           cat > ~/.ssh/id_rsa << EOF
           ${{ secrets.PRIVATE_KEY }}
           EOF
           chmod 400 ~/.ssh/id_rsa
           cat > ~/.ssh/known_hosts << EOF
           ${{ secrets.HOST_KEY }}
           EOF
      - name: Get proxy
        run: |
           sleep $[ ( $RANDOM % 100 )  + 1 ]s
           scp ${{ secrets.PROXY_LOCATION }} ./
           ls -l $PWD/user_cert
      - name: Write utilix config
        run: |
            bash .github/scripts/create-utilix-config.sh
            cp ~/.xenon_config ./
        env:
          RUNDB_API_URL: ${{ secrets.RUNDB_API_URL }}
          RUNDB_API_USER: ${{ secrets.RUNDB_API_USER }}
          RUNDB_API_PASSWORD: ${{ secrets.RUNDB_API_PASSWORD }}
          PYMONGO_URL: ${{ secrets.PYMONGO_URL }}
          PYMONGO_USER: ${{ secrets.PYMONGO_USER }}
          PYMONGO_PASSWORD: ${{ secrets.PYMONGO_PASSWORD }}
          PYMONGO_DATABASE: ${{ secrets.PYMONGO_DATABASE }}
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.EVAN_DOCKER_USERNAME }}
          password: ${{ secrets.EVAN_DOCKER_PASSWORD }}
      - name: Build container
        run: |
            while sleep 9m; do echo "=====[ Build is still running after $SECONDS seconds ]====="; done &
            docker build -t testing . --build-arg XENONnT_TAG=testing
      - name: Run tests
        run: docker run -v $PWD:/home --env HOME=/home --env X509_USER_PROXY=/home/user_cert testing:latest bash /home/.github/scripts/do_tests.sh
      - name: checkout cutax
        uses: actions/checkout@v2
        with:
          repository: XENONnT/cutax
          token: ${{ secrets.CUTAX_TOKEN }}
          path: cutax
          fetch-depth: 0
        if: github.event_name != 'pull_request'
      - name: Update context collection
        run: docker run -v $PWD:/home --env HOME=/home --env X509_USER_PROXY=/home/user_cert testing:latest bash /home/.github/scripts/update_context_wrapper.sh
        if: github.event_name != 'pull_request'
